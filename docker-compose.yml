version: '3'

services:

  postgres:
    image: postgres:11.2-alpine
    ports:
      - "5432:5432"
    env_file: .env
    environment:
      - POSTGRES_DB=$DB_NAME
      - POSTGRES_USER=$DB_USER
      - POSTGRES_PASSWORD=$DB_PASS
    # volumes:
    #   - pgdata:/var/lib/postgresql/data

  redis:
    image: redis
    ports:
      - "6379:6379"

  mongo:
    image: mongo:4.1.8-xenial
    ports:
      - "27017:27017"

    # volumes:
    #   - mongodata:/data/db

  migrate:
    build: .
    entrypoint: node_modules/.bin/sequelize db:migrate --config src/config/database.js --migrations-path src/database/migrations/
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - postgres

  seed:
    build: .
    entrypoint: node_modules/.bin/sequelize db:seed:all --config src/config/database.js --migrations-path src/database/migrations/
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - migrate
      - postgres

  gympoint-backend:
    build: .
    # entrypoint: node dist/server.js
    entrypoint: node_modules/.bin/nodemon src/server.js
    ports:
      - "3000:3000"
    env_file: .env
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - postgres
      - redis
      - mongo
    links:
      - postgres
      - redis
      - mongo
    # image: gympoint-backend
    # container_name: gympoint-backend
    # restart: unless-stopped

    # networks:
    #   - gympoint-network
    # command: npm run docker:dev

  gympoint-queue:
    build: .
    # entrypoint: node dist/queue.js
    entrypoint: node_modules/.bin/nodemon src/queue.js
    env_file: .env
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - redis
    links:
      - redis
# networks:
#   gympoint-network:
#     driver: bridge

# volumes:
#   pgdata:
#   mongodata:
#   node_modules:
